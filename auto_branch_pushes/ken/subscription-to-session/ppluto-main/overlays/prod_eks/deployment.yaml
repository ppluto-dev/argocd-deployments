kind: Rollout
apiVersion: argoproj.io/v1alpha1
metadata:
  name: ppluto-main
spec:
  selector:
    matchLabels:
      app: ppluto-main
  replicas: 10
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: ppluto-main
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '9464'
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node.pluto.co/purpose
                    operator: In
                    values:
                      - service
      terminationGracePeriodSeconds: 360 # https://jenakim47.tistory.com/80
      containers:
        - name: ppluto-main--prod-client
          image: registry.gitlab.com/ppluto-dev/ppluto-main/prod-client:5d91ddb939d129a7890eb48227e10747599fdb4e65209ede6cb2232e6297d408
          ports:
            - containerPort: 5280
            - containerPort: 5380
            - containerPort: 5480
          resources:
            requests:
              cpu: 40m
            limits:
              cpu: 200m
              memory: 100Mi
              ephemeral-storage: 1Gi
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 1800"]
        - name: ppluto-main--prod-client-tickerbell
          image: registry.gitlab.com/ppluto-dev/ppluto-main/prod-client-tickerbell:3133c73cfc158962b1ae02ea44c76f0cff79728e1a4bdb3229502ebd9db21050
          ports:
            - containerPort: 5080
            - containerPort: 5095
          readinessProbe:
            httpGet:
              port: 5080
              path: /
          livenessProbe:
            httpGet:
              port: 5080
              path: /
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 2
              memory: 3Gi
              ephemeral-storage: 1Gi
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 1800"]
        - name: ppluto-main--prod-server
          image: registry.gitlab.com/ppluto-dev/ppluto-main/prod-server:3ca1f3cb7f1750563324b7179192331da439c6db493719358a8014e478252c8a
          env:
            - name: PPLUTO_SERVER_ARG_SERVER
              value: api-server
          ports:
            - containerPort: 81
            - containerPort: 82
            - containerPort: 83
            - containerPort: 84
          readinessProbe:
            # TODO: Implement gRPC health check instead. https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#probe-check-methods
            tcpSocket:
              port: 82
          # TODO: Enable `livenessProbe`.  Temporarily disabled to debug container crash issue.
          # livenessProbe:
          #   tcpSocket:
          #     port: 82
          resources:
            requests:
              cpu: 1
              memory: 8Gi
            limits:
              cpu: 3
              memory: 12Gi # Temporarily increased memory to avoid OOM crashes on GAIA batch prompt execution
              ephemeral-storage: 9Gi
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 1800"]
      imagePullSecrets:
        - name: gitlab-container-registry
  strategy:
    blueGreen:
      activeService: ppluto-main-service-active
      previewService: ppluto-main-service-preview
      autoPromotionEnabled: true
